{
  "info": {
    "_postman_id": "99dc6d06-2d32-488f-b02e-d3e65116b1c9",
    "name": "Bretaro",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "27058829"
  },
  "item": [
    {
      "name": "GET /",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:4000/",
          "protocol": "http",
          "host": ["localhost"],
          "port": "4000",
          "path": [""]
        },
        "description": "- Check the server response through the pingController\n- Send the message \"üèì Pong\" in the response body and status 200"
      },
      "response": []
    },
    {
      "name": "GET / (wrong endpoint)",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:4000/sfsdf",
          "protocol": "http",
          "host": ["localhost"],
          "port": "4000",
          "path": ["sfsdf"]
        },
        "description": "- Request to a wrong endpoint\n- Send the message \"Endopoint not found\" in the response body and status 404"
      },
      "response": []
    },
    {
      "name": "GET /  books",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:4000/books",
          "protocol": "http",
          "host": ["localhost"],
          "port": "4000",
          "path": ["books"]
        },
        "description": "- Request for a list of 10 books\n- Send a collection of 10 books in the response body and status 200"
      },
      "response": []
    },
    {
      "name": "DELETE /  books / delete / :id",
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "http://localhost:4000/books/delete/647711a81beb7e30d69afdff",
          "protocol": "http",
          "host": ["localhost"],
          "port": "4000",
          "path": ["books", "delete", "647711a81beb7e30d69afdff"]
        },
        "description": "- Request to delete a book by its id\n- Send the message \"The book has been deleted\" in the response body and status 200"
      },
      "response": []
    },
    {
      "name": "DELETE /  books / delete / :id (id not found)",
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "http://localhost:4000/books/delete/647711a81beb7e30d69afdff",
          "protocol": "http",
          "host": ["localhost"],
          "port": "4000",
          "path": ["books", "delete", "647711a81beb7e30d69afdff"]
        },
        "description": "- Request to delete a book already deleted or case in which the book id could not be found.\n- Send the message \"Can't delete this book because it doesn't exist\" in the response body and status 404."
      },
      "response": []
    }
  ]
}
